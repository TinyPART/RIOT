/*
 * Copyright (C) 2023-2024 Orange
 *
 * This file is subject to the terms and conditions of the GNU Lesser
 * General Public License v2.1. See the file LICENSE in the top level
 * directory of the TinyContainer module for more details.
 */

#ifndef CONTAINER_WAMR_H
#define CONTAINER_WAMR_H

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

/* "metadata": {
 *     "container": {
 *         "id": "container--id--01",
 *         "type": "wasm",
 *         "syscall_mask": "11111"
 *     },
 *     "endpoints": [ {
 *         "id": 123,
 *         "endpoint_type": "local",
 *         "peer_endpoint_id": 10,
 *         "direction": "both"
 *     }],
 *     "security": [
           "start-max-duration": 100,
           "loop-period": 1000,
           "loop-max-duration": 100,
           "loop-max-lifetime": 1000,
           "stop-max-duration": 100,
           "data_token": [
               "protected_header": "",
               "unprotected_header": {},
               "payload": {
                   "sha256": "1c18b9681e7f34e979dc4c9973f1e9d
                              723aa5166a39a45e9a5e2da6d968c22
                              81"
               }
               "signature": "024B1F5B76DD5F0AFAC50EF4078D5967
                             4E127536C3F2184776500FDF31CA5129
                             F3E784C983ABB8B1E126C067F66F8453
                             37B1F30F100FEA34E754A2CF3A97C50F"
           ],
           "data_token": [
               "protected_header": "",
               "unprotected_header": {},
               "payload": {
                   "sha256": "19a859d01c9965436f58e30f974d2f0
                              0dc018b67904775fdadbfcb82d7a5fa
                              5f"
               }
               "signature": "77A40CA5F75C5395A168EB1AA9F0325B
                             48F0CCE75F8968E9777883D5B85324E5
                             EB8080B6ED929C53F3DAA98A6F29A111
                             99686B26DAF1B19BADF619132CDB1407"
           ],
           "metadata_token": [
               "protected_header": "",
               "unprotected_header": {},
               "payload": {
                   "sha256": "3649fcc0aff1ea356ebd584231ab149
                              7025da6ce6fa9eeb30bed05bdf03d6e
                              65"
               },
               "signature": "67DED7E887A577F8766F6602EF1BAA0D
                             8A39EB6E5C1D40A5930C45838FC7F196
                             0CED9B277494AF658F5B1AB5E9AE2F0B
                             CE3BC49F99700C5B19362F2F49C18A08"
           ],
       ]
 * }
 */
uint8_t meta[] = {
  0xdb, 0x54, 0x69, 0x6e, 0x79, 0x50, 0x41, 0x52, 0x54, 0xa3, 0x01, 0x58,
  0x65, 0xa3, 0x01, 0x51, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
  0x72, 0x2d, 0x2d, 0x69, 0x64, 0x2d, 0x2d, 0x30, 0x31, 0x02, 0x04, 0x03,
  0x58, 0x4c, 0x84, 0x40, 0xa0, 0x46, 0xa1, 0x39, 0xff, 0xff, 0x41, 0xff,
  0x58, 0x40, 0xec, 0xd6, 0x98, 0xe3, 0xf3, 0x6f, 0xd1, 0x02, 0x8a, 0x5f,
  0x3b, 0xc5, 0xb7, 0x49, 0x11, 0xd2, 0x94, 0xb2, 0xd4, 0x3f, 0x95, 0x73,
  0xb9, 0x91, 0x6e, 0x6e, 0xcf, 0x08, 0x8e, 0x06, 0x26, 0x4c, 0x2e, 0xbd,
  0x7e, 0x42, 0x2b, 0x8d, 0x5c, 0xdb, 0x37, 0xc4, 0x46, 0xd0, 0xef, 0x6c,
  0x11, 0x05, 0x1e, 0x57, 0x88, 0x74, 0x10, 0x18, 0x9e, 0xe5, 0x71, 0x1e,
  0xd5, 0xea, 0xf2, 0xcc, 0x49, 0x02, 0x02, 0x4b, 0x81, 0xa4, 0x01, 0x18,
  0x7b, 0x02, 0x01, 0x04, 0x0a, 0x05, 0x02, 0x03, 0x59, 0x01, 0x60, 0x88,
  0x18, 0x64, 0x19, 0x03, 0xe8, 0x18, 0x64, 0x19, 0x03, 0xe8, 0x18, 0x64,
  0x58, 0x6f, 0x84, 0x40, 0xa0, 0x58, 0x28, 0xa1, 0x3a, 0x00, 0x01, 0x00,
  0x00, 0x58, 0x20, 0x1c, 0x18, 0xb9, 0x68, 0x1e, 0x7f, 0x34, 0xe9, 0x79,
  0xdc, 0x4c, 0x99, 0x73, 0xf1, 0xe9, 0xd7, 0x23, 0xaa, 0x51, 0x66, 0xa3,
  0x9a, 0x45, 0xe9, 0xa5, 0xe2, 0xda, 0x6d, 0x96, 0x8c, 0x22, 0x81, 0x58,
  0x40, 0x02, 0x4b, 0x1f, 0x5b, 0x76, 0xdd, 0x5f, 0x0a, 0xfa, 0xc5, 0x0e,
  0xf4, 0x07, 0x8d, 0x59, 0x67, 0x4e, 0x12, 0x75, 0x36, 0xc3, 0xf2, 0x18,
  0x47, 0x76, 0x50, 0x0f, 0xdf, 0x31, 0xca, 0x51, 0x29, 0xf3, 0xe7, 0x84,
  0xc9, 0x83, 0xab, 0xb8, 0xb1, 0xe1, 0x26, 0xc0, 0x67, 0xf6, 0x6f, 0x84,
  0x53, 0x37, 0xb1, 0xf3, 0x0f, 0x10, 0x0f, 0xea, 0x34, 0xe7, 0x54, 0xa2,
  0xcf, 0x3a, 0x97, 0xc5, 0x0f, 0x58, 0x6f, 0x84, 0x40, 0xa0, 0x58, 0x28,
  0xa1, 0x3a, 0x00, 0x01, 0x00, 0x00, 0x58, 0x20, 0x19, 0xa8, 0x59, 0xd0,
  0x1c, 0x99, 0x65, 0x43, 0x6f, 0x58, 0xe3, 0x0f, 0x97, 0x4d, 0x2f, 0x00,
  0xdc, 0x01, 0x8b, 0x67, 0x90, 0x47, 0x75, 0xfd, 0xad, 0xbf, 0xcb, 0x82,
  0xd7, 0xa5, 0xfa, 0x5f, 0x58, 0x40, 0x77, 0xa4, 0x0c, 0xa5, 0xf7, 0x5c,
  0x53, 0x95, 0xa1, 0x68, 0xeb, 0x1a, 0xa9, 0xf0, 0x32, 0x5b, 0x48, 0xf0,
  0xcc, 0xe7, 0x5f, 0x89, 0x68, 0xe9, 0x77, 0x78, 0x83, 0xd5, 0xb8, 0x53,
  0x24, 0xe5, 0xeb, 0x80, 0x80, 0xb6, 0xed, 0x92, 0x9c, 0x53, 0xf3, 0xda,
  0xa9, 0x8a, 0x6f, 0x29, 0xa1, 0x11, 0x99, 0x68, 0x6b, 0x26, 0xda, 0xf1,
  0xb1, 0x9b, 0xad, 0xf6, 0x19, 0x13, 0x2c, 0xdb, 0x14, 0x07, 0x58, 0x6f,
  0x84, 0x40, 0xa0, 0x58, 0x28, 0xa1, 0x3a, 0x00, 0x01, 0x00, 0x00, 0x58,
  0x20, 0x36, 0x49, 0xfc, 0xc0, 0xaf, 0xf1, 0xea, 0x35, 0x6e, 0xbd, 0x58,
  0x42, 0x31, 0xab, 0x14, 0x97, 0x02, 0x5d, 0xa6, 0xce, 0x6f, 0xa9, 0xee,
  0xb3, 0x0b, 0xed, 0x05, 0xbd, 0xf0, 0x3d, 0x6e, 0x65, 0x58, 0x40, 0x67,
  0xde, 0xd7, 0xe8, 0x87, 0xa5, 0x77, 0xf8, 0x76, 0x6f, 0x66, 0x02, 0xef,
  0x1b, 0xaa, 0x0d, 0x8a, 0x39, 0xeb, 0x6e, 0x5c, 0x1d, 0x40, 0xa5, 0x93,
  0x0c, 0x45, 0x83, 0x8f, 0xc7, 0xf1, 0x96, 0x0c, 0xed, 0x9b, 0x27, 0x74,
  0x94, 0xaf, 0x65, 0x8f, 0x5b, 0x1a, 0xb5, 0xe9, 0xae, 0x2f, 0x0b, 0xce,
  0x3b, 0xc4, 0x9f, 0x99, 0x70, 0x0c, 0x5b, 0x19, 0x36, 0x2f, 0x2f, 0x49,
  0xc1, 0x8a, 0x08
};
int meta_size = sizeof(meta);

uint8_t data[] = {
  0x6e, 0x6f, 0x74, 0x20, 0x79, 0x65, 0x74, 0x20, 0x69, 0x6d, 0x70, 0x6c,
  0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64
};
int data_size = sizeof(data);

uint8_t code[] = {
    0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x18, 0x05, 0x60,
    0x01, 0x7f, 0x00, 0x60, 0x01, 0x7f, 0x01, 0x7f, 0x60, 0x03, 0x7f, 0x7f,
    0x7f, 0x01, 0x7f, 0x60, 0x00, 0x00, 0x60, 0x00, 0x01, 0x7f, 0x02, 0x3c,
    0x05, 0x03, 0x65, 0x6e, 0x76, 0x06, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72,
    0x00, 0x00, 0x03, 0x65, 0x6e, 0x76, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x00,
    0x01, 0x03, 0x65, 0x6e, 0x76, 0x04, 0x72, 0x65, 0x61, 0x64, 0x00, 0x02,
    0x03, 0x65, 0x6e, 0x76, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x00, 0x02,
    0x03, 0x65, 0x6e, 0x76, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x00, 0x01,
    0x03, 0x04, 0x03, 0x03, 0x04, 0x03, 0x05, 0x03, 0x01, 0x00, 0x01, 0x06,
    0x13, 0x03, 0x7f, 0x01, 0x41, 0xe0, 0x01, 0x0b, 0x7f, 0x00, 0x41, 0xd2,
    0x00, 0x0b, 0x7f, 0x00, 0x41, 0xe0, 0x01, 0x0b, 0x07, 0x3b, 0x06, 0x06,
    0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x02, 0x00, 0x05, 0x73, 0x74, 0x61,
    0x72, 0x74, 0x00, 0x05, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x00, 0x06, 0x04,
    0x73, 0x74, 0x6f, 0x70, 0x00, 0x07, 0x0a, 0x5f, 0x5f, 0x64, 0x61, 0x74,
    0x61, 0x5f, 0x65, 0x6e, 0x64, 0x03, 0x01, 0x0b, 0x5f, 0x5f, 0x68, 0x65,
    0x61, 0x70, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x03, 0x02, 0x0a, 0x9c, 0x01,
    0x03, 0x20, 0x00, 0x41, 0x90, 0x80, 0x80, 0x80, 0x00, 0x10, 0x80, 0x80,
    0x80, 0x80, 0x00, 0x41, 0x00, 0x41, 0xfb, 0x00, 0x10, 0x81, 0x80, 0x80,
    0x80, 0x00, 0x36, 0x02, 0xc4, 0x80, 0x80, 0x80, 0x00, 0x0b, 0x5a, 0x01,
    0x01, 0x7f, 0x41, 0xb0, 0x80, 0x80, 0x80, 0x00, 0x10, 0x80, 0x80, 0x80,
    0x80, 0x00, 0x41, 0x00, 0x28, 0x02, 0xc4, 0x80, 0x80, 0x80, 0x00, 0x41,
    0xc8, 0x80, 0x80, 0x80, 0x00, 0x41, 0x0a, 0x10, 0x82, 0x80, 0x80, 0x80,
    0x00, 0x1a, 0x41, 0x00, 0x28, 0x02, 0xc4, 0x80, 0x80, 0x80, 0x00, 0x41,
    0xc8, 0x80, 0x80, 0x80, 0x00, 0x41, 0x0a, 0x10, 0x83, 0x80, 0x80, 0x80,
    0x00, 0x1a, 0x41, 0x00, 0x41, 0x00, 0x28, 0x02, 0xc0, 0x80, 0x80, 0x80,
    0x00, 0x22, 0x00, 0x41, 0x7f, 0x6a, 0x36, 0x02, 0xc0, 0x80, 0x80, 0x80,
    0x00, 0x20, 0x00, 0x45, 0x0b, 0x1e, 0x00, 0x41, 0x00, 0x28, 0x02, 0xc4,
    0x80, 0x80, 0x80, 0x00, 0x10, 0x84, 0x80, 0x80, 0x80, 0x00, 0x1a, 0x41,
    0xa0, 0x80, 0x80, 0x80, 0x00, 0x10, 0x80, 0x80, 0x80, 0x80, 0x00, 0x0b,
    0x0b, 0x3f, 0x02, 0x00, 0x41, 0x10, 0x0b, 0x2f, 0x57, 0x41, 0x4d, 0x52,
    0x3a, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x0a, 0x00,
    0x57, 0x41, 0x4d, 0x52, 0x3a, 0x20, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x69,
    0x6e, 0x67, 0x0a, 0x00, 0x57, 0x41, 0x4d, 0x52, 0x3a, 0x20, 0x6c, 0x6f,
    0x6f, 0x70, 0x69, 0x6e, 0x67, 0x0a, 0x00, 0x00, 0x41, 0xc0, 0x00, 0x0b,
    0x04, 0x64, 0x00, 0x00, 0x00
};
int code_size = sizeof(code);

#ifdef __cplusplus
}
#endif

#endif /* CONTAINER_WAMR_H */
